/* tslint:disable */
/* eslint-disable */
/**
 * zzirit API
 * 찌릿 API 명세서
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemResponse
 */
export interface ItemResponse {
    /**
     * 
     * @type {number}
     * @memberof ItemResponse
     */
    itemId?: number;
    /**
     * 
     * @type {string}
     * @memberof ItemResponse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemResponse
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemResponse
     */
    brand?: string;
    /**
     * 
     * @type {number}
     * @memberof ItemResponse
     */
    quantity?: number;
    /**
     * 
     * @type {number}
     * @memberof ItemResponse
     */
    price?: number;
    /**
     * 
     * @type {string}
     * @memberof ItemResponse
     */
    timeDealStatus?: ItemResponseTimeDealStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof ItemResponse
     */
    endTimeDeal?: Date;
}


/**
 * @export
 */
export const ItemResponseTimeDealStatusEnum = {
    None: 'NONE',
    TimeDeal: 'TIME_DEAL'
} as const;
export type ItemResponseTimeDealStatusEnum = typeof ItemResponseTimeDealStatusEnum[keyof typeof ItemResponseTimeDealStatusEnum];


/**
 * Check if a given object implements the ItemResponse interface.
 */
export function instanceOfItemResponse(value: object): value is ItemResponse {
    return true;
}

export function ItemResponseFromJSON(json: any): ItemResponse {
    return ItemResponseFromJSONTyped(json, false);
}

export function ItemResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'itemId': json['itemId'] == null ? undefined : json['itemId'],
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : json['type'],
        'brand': json['brand'] == null ? undefined : json['brand'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'price': json['price'] == null ? undefined : json['price'],
        'timeDealStatus': json['timeDealStatus'] == null ? undefined : json['timeDealStatus'],
        'endTimeDeal': json['endTimeDeal'] == null ? undefined : (new Date(json['endTimeDeal'])),
    };
}

export function ItemResponseToJSON(json: any): ItemResponse {
    return ItemResponseToJSONTyped(json, false);
}

export function ItemResponseToJSONTyped(value?: ItemResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'itemId': value['itemId'],
        'name': value['name'],
        'type': value['type'],
        'brand': value['brand'],
        'quantity': value['quantity'],
        'price': value['price'],
        'timeDealStatus': value['timeDealStatus'],
        'endTimeDeal': value['endTimeDeal'] == null ? undefined : ((value['endTimeDeal']).toISOString()),
    };
}

