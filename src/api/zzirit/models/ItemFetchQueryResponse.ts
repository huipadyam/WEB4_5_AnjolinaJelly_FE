/* tslint:disable */
/* eslint-disable */
/**
 * zzirit API
 * 찌릿 API 명세서
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemFetchQueryResponse
 */
export interface ItemFetchQueryResponse {
    /**
     * 
     * @type {number}
     * @memberof ItemFetchQueryResponse
     */
    itemId?: number;
    /**
     * 
     * @type {string}
     * @memberof ItemFetchQueryResponse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemFetchQueryResponse
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemFetchQueryResponse
     */
    brand?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemFetchQueryResponse
     */
    imageUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof ItemFetchQueryResponse
     */
    originalPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof ItemFetchQueryResponse
     */
    discountedPrice?: number;
    /**
     * 
     * @type {string}
     * @memberof ItemFetchQueryResponse
     */
    itemStatus?: ItemFetchQueryResponseItemStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof ItemFetchQueryResponse
     */
    discountRatio?: number;
    /**
     * 
     * @type {Date}
     * @memberof ItemFetchQueryResponse
     */
    endTimeDeal?: Date;
}


/**
 * @export
 */
export const ItemFetchQueryResponseItemStatusEnum = {
    None: 'NONE',
    TimeDeal: 'TIME_DEAL'
} as const;
export type ItemFetchQueryResponseItemStatusEnum = typeof ItemFetchQueryResponseItemStatusEnum[keyof typeof ItemFetchQueryResponseItemStatusEnum];


/**
 * Check if a given object implements the ItemFetchQueryResponse interface.
 */
export function instanceOfItemFetchQueryResponse(value: object): value is ItemFetchQueryResponse {
    return true;
}

export function ItemFetchQueryResponseFromJSON(json: any): ItemFetchQueryResponse {
    return ItemFetchQueryResponseFromJSONTyped(json, false);
}

export function ItemFetchQueryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemFetchQueryResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'itemId': json['itemId'] == null ? undefined : json['itemId'],
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : json['type'],
        'brand': json['brand'] == null ? undefined : json['brand'],
        'imageUrl': json['imageUrl'] == null ? undefined : json['imageUrl'],
        'originalPrice': json['originalPrice'] == null ? undefined : json['originalPrice'],
        'discountedPrice': json['discountedPrice'] == null ? undefined : json['discountedPrice'],
        'itemStatus': json['itemStatus'] == null ? undefined : json['itemStatus'],
        'discountRatio': json['discountRatio'] == null ? undefined : json['discountRatio'],
        'endTimeDeal': json['endTimeDeal'] == null ? undefined : (new Date(json['endTimeDeal'])),
    };
}

export function ItemFetchQueryResponseToJSON(json: any): ItemFetchQueryResponse {
    return ItemFetchQueryResponseToJSONTyped(json, false);
}

export function ItemFetchQueryResponseToJSONTyped(value?: ItemFetchQueryResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'itemId': value['itemId'],
        'name': value['name'],
        'type': value['type'],
        'brand': value['brand'],
        'imageUrl': value['imageUrl'],
        'originalPrice': value['originalPrice'],
        'discountedPrice': value['discountedPrice'],
        'itemStatus': value['itemStatus'],
        'discountRatio': value['discountRatio'],
        'endTimeDeal': value['endTimeDeal'] == null ? undefined : ((value['endTimeDeal']).toISOString()),
    };
}

