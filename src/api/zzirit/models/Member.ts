/* tslint:disable */
/* eslint-disable */
/**
 * zzirit API
 * 찌릿 API 명세서
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Member
 */
export interface Member {
    /**
     * 
     * @type {number}
     * @memberof Member
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof Member
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Member
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    memberName?: string;
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    memberEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    role?: MemberRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    memberAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof Member
     */
    memberAddressDetail?: string;
}


/**
 * @export
 */
export const MemberRoleEnum = {
    RoleUser: 'ROLE_USER',
    RoleAdmin: 'ROLE_ADMIN',
    RoleGuest: 'ROLE_GUEST'
} as const;
export type MemberRoleEnum = typeof MemberRoleEnum[keyof typeof MemberRoleEnum];


/**
 * Check if a given object implements the Member interface.
 */
export function instanceOfMember(value: object): value is Member {
    return true;
}

export function MemberFromJSON(json: any): Member {
    return MemberFromJSONTyped(json, false);
}

export function MemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): Member {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'memberName': json['memberName'] == null ? undefined : json['memberName'],
        'memberEmail': json['memberEmail'] == null ? undefined : json['memberEmail'],
        'password': json['password'] == null ? undefined : json['password'],
        'role': json['role'] == null ? undefined : json['role'],
        'memberAddress': json['memberAddress'] == null ? undefined : json['memberAddress'],
        'memberAddressDetail': json['memberAddressDetail'] == null ? undefined : json['memberAddressDetail'],
    };
}

export function MemberToJSON(json: any): Member {
    return MemberToJSONTyped(json, false);
}

export function MemberToJSONTyped(value?: Member | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'memberName': value['memberName'],
        'memberEmail': value['memberEmail'],
        'password': value['password'],
        'role': value['role'],
        'memberAddress': value['memberAddress'],
        'memberAddressDetail': value['memberAddressDetail'],
    };
}

