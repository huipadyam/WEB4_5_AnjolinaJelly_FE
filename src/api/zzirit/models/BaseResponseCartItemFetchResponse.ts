/* tslint:disable */
/* eslint-disable */
/**
 * zzirit API
 * 찌릿 API 명세서
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CartItemFetchResponse } from './CartItemFetchResponse';
import {
    CartItemFetchResponseFromJSON,
    CartItemFetchResponseFromJSONTyped,
    CartItemFetchResponseToJSON,
    CartItemFetchResponseToJSONTyped,
} from './CartItemFetchResponse';

/**
 * 
 * @export
 * @interface BaseResponseCartItemFetchResponse
 */
export interface BaseResponseCartItemFetchResponse {
    /**
     * 
     * @type {boolean}
     * @memberof BaseResponseCartItemFetchResponse
     */
    success?: boolean;
    /**
     * 
     * @type {number}
     * @memberof BaseResponseCartItemFetchResponse
     */
    code?: number;
    /**
     * 
     * @type {number}
     * @memberof BaseResponseCartItemFetchResponse
     */
    httpStatus?: number;
    /**
     * 
     * @type {string}
     * @memberof BaseResponseCartItemFetchResponse
     */
    message?: string;
    /**
     * 
     * @type {CartItemFetchResponse}
     * @memberof BaseResponseCartItemFetchResponse
     */
    result?: CartItemFetchResponse;
}

/**
 * Check if a given object implements the BaseResponseCartItemFetchResponse interface.
 */
export function instanceOfBaseResponseCartItemFetchResponse(value: object): value is BaseResponseCartItemFetchResponse {
    return true;
}

export function BaseResponseCartItemFetchResponseFromJSON(json: any): BaseResponseCartItemFetchResponse {
    return BaseResponseCartItemFetchResponseFromJSONTyped(json, false);
}

export function BaseResponseCartItemFetchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseResponseCartItemFetchResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'] == null ? undefined : json['success'],
        'code': json['code'] == null ? undefined : json['code'],
        'httpStatus': json['httpStatus'] == null ? undefined : json['httpStatus'],
        'message': json['message'] == null ? undefined : json['message'],
        'result': json['result'] == null ? undefined : CartItemFetchResponseFromJSON(json['result']),
    };
}

export function BaseResponseCartItemFetchResponseToJSON(json: any): BaseResponseCartItemFetchResponse {
    return BaseResponseCartItemFetchResponseToJSONTyped(json, false);
}

export function BaseResponseCartItemFetchResponseToJSONTyped(value?: BaseResponseCartItemFetchResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'code': value['code'],
        'httpStatus': value['httpStatus'],
        'message': value['message'],
        'result': CartItemFetchResponseToJSON(value['result']),
    };
}

