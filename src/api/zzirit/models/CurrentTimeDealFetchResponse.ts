/* tslint:disable */
/* eslint-disable */
/**
 * zzirit API
 * 찌릿 API 명세서
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CurrentTimeDealItem } from './CurrentTimeDealItem';
import {
    CurrentTimeDealItemFromJSON,
    CurrentTimeDealItemFromJSONTyped,
    CurrentTimeDealItemToJSON,
    CurrentTimeDealItemToJSONTyped,
} from './CurrentTimeDealItem';

/**
 * 
 * @export
 * @interface CurrentTimeDealFetchResponse
 */
export interface CurrentTimeDealFetchResponse {
    /**
     * 
     * @type {number}
     * @memberof CurrentTimeDealFetchResponse
     */
    timeDealId?: number;
    /**
     * 
     * @type {string}
     * @memberof CurrentTimeDealFetchResponse
     */
    timeDealName?: string;
    /**
     * 
     * @type {Date}
     * @memberof CurrentTimeDealFetchResponse
     */
    startTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof CurrentTimeDealFetchResponse
     */
    endTime?: Date;
    /**
     * 
     * @type {number}
     * @memberof CurrentTimeDealFetchResponse
     */
    discountRatio?: number;
    /**
     * 
     * @type {string}
     * @memberof CurrentTimeDealFetchResponse
     */
    status?: CurrentTimeDealFetchResponseStatusEnum;
    /**
     * 
     * @type {Array<CurrentTimeDealItem>}
     * @memberof CurrentTimeDealFetchResponse
     */
    items?: Array<CurrentTimeDealItem>;
}


/**
 * @export
 */
export const CurrentTimeDealFetchResponseStatusEnum = {
    Scheduled: 'SCHEDULED',
    Ongoing: 'ONGOING',
    Ended: 'ENDED'
} as const;
export type CurrentTimeDealFetchResponseStatusEnum = typeof CurrentTimeDealFetchResponseStatusEnum[keyof typeof CurrentTimeDealFetchResponseStatusEnum];


/**
 * Check if a given object implements the CurrentTimeDealFetchResponse interface.
 */
export function instanceOfCurrentTimeDealFetchResponse(value: object): value is CurrentTimeDealFetchResponse {
    return true;
}

export function CurrentTimeDealFetchResponseFromJSON(json: any): CurrentTimeDealFetchResponse {
    return CurrentTimeDealFetchResponseFromJSONTyped(json, false);
}

export function CurrentTimeDealFetchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrentTimeDealFetchResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'timeDealId': json['timeDealId'] == null ? undefined : json['timeDealId'],
        'timeDealName': json['timeDealName'] == null ? undefined : json['timeDealName'],
        'startTime': json['startTime'] == null ? undefined : (new Date(json['startTime'])),
        'endTime': json['endTime'] == null ? undefined : (new Date(json['endTime'])),
        'discountRatio': json['discountRatio'] == null ? undefined : json['discountRatio'],
        'status': json['status'] == null ? undefined : json['status'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(CurrentTimeDealItemFromJSON)),
    };
}

export function CurrentTimeDealFetchResponseToJSON(json: any): CurrentTimeDealFetchResponse {
    return CurrentTimeDealFetchResponseToJSONTyped(json, false);
}

export function CurrentTimeDealFetchResponseToJSONTyped(value?: CurrentTimeDealFetchResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'timeDealId': value['timeDealId'],
        'timeDealName': value['timeDealName'],
        'startTime': value['startTime'] == null ? undefined : ((value['startTime']).toISOString()),
        'endTime': value['endTime'] == null ? undefined : ((value['endTime']).toISOString()),
        'discountRatio': value['discountRatio'],
        'status': value['status'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(CurrentTimeDealItemToJSON)),
    };
}

